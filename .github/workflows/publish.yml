name: Publish to Docker Hub
on:
  push:
    branches:
      - test
    paths-ignore:
      - README.md
env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/unbound-test
jobs:
  Docker-Operations:
    # runs-on: buildjet-4vcpu-ubuntu-2204-arm
    strategy:
      fail-fast: false
      matrix:
        # platform:
        #   - linux/amd64
        #   - linux/arm64
        # runs-on:
        #   - buildjet-4vcpu-ubuntu-2204-arm
        #   - buildjet-4vcpu-ubuntu-2204
        include:
          - runs-on: buildjet-4vcpu-ubuntu-2204-arm
            context: ./1.17.1/
            tags: |
              type=raw,value=1.17.1
              type=raw,value=latest
          - runs-on: buildjet-4vcpu-ubuntu-2204-arm
            context: ./1.17.0/
            tags: |
              type=raw,value=1.17.0
          - runs-on: buildjet-4vcpu-ubuntu-2204
            context: ./1.17.1/
            tags: |
              type=raw,value=1.17.1
              type=raw,value=latest
          - runs-on: buildjet-4vcpu-ubuntu-2204
            context: ./1.17.0/
            tags: |
              type=raw,value=1.17.0
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ matrix.tags }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push by Digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          # platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export Digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload Digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  Merge-Images:
    runs-on: buildjet-4vcpu-ubuntu-2204
    needs:
      - Docker-Operations
    strategy:
      fail-fast: false
      matrix:
        tags:
          - latest
          - 1.17.1
          - 1.17.0
    steps:
      - name: Download Digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=${{ matrix.tags }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create Manifest List and Push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect Image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
